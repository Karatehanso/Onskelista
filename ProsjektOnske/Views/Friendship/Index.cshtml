@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@using Microsoft.AspNetCore.Identity
@model olist.Models.ApplicationUser



@{
    ViewData["Title"] = "Home Page";
}


<div class=«profiltabber»>
    <nav class="nav nav-tabs">
      
        <a asp-area="" asp-controller="Profile" asp-action="Index" class="nav-item nav-link">
            <i class="fa fa-user"></i> Hjem
        </a>
      
        <a asp-area="" asp-controller="Friendship" asp-action="Index" class="nav-item nav-link active">
            <i class="fa fa-users"></i> Venner
        </a>

        <a asp-area="" asp-controller="Notifikasjon" asp-action="Index" class="nav-item nav-link">
            <i class="fa fa-bell"></i> Varslinger
        </a>
      
        <a href="#" class="nav-item nav-link disabled" tabindex="-1">
            <i class="fas fa-shopping-basket"></i>Handlekurv[X]
        </a>
      
    </nav>
</div>

<div class = " jumbotron" id="jumboron1">
    <div>
        <button style="margin: auto; display: block" class="btn primary">
            <a class="btn btn-secondary" id="knnap2" asp-area="" asp-controller="Friendship" asp-action="SearchFriend">Søke etter venner</a>

        </button>
    </div>
    <br></br>
 

<div id="app" v-cloak xmlns:v-on="http://www.w3.org/1999/xhtml" xmlns:v-bind="http://www.w3.org/1999/xhtml">
    
    <h3>{{ friendRequest.fornavn }}</h3>

    <br/><br/>
    <h3 id="textCenter">{{ message }}</h3>
    
    
    <br/>
    <br></br>
     
    @{
                    
        var user = await UserManager.GetUserAsync(User);
    }
    
    <table id="textCenter" class="table table-hover">
        <thead>
        <tr>
            <th></th>
            <th>Fornavn</th>
            <th>Etternavn</th>
            <th>Fødselsdato</th>
            <th>Fjern venn</th>
        </tr>
        </thead>

        
        <tr v-for="(friendRequest, index) in x.friendRequest">
            <td class="userpic"><img v-bind:src ="friendRequest.profilePicture" height="30" width="30"/> </td>
            <td class="FirstName"  v-on:click="visitFriend(friendRequest.friendToId)">{{ friendRequest.firstName  }} </td>
            <td class="LastName">{{ friendRequest.lastName }} </td>
            <td class="Birthday" id="Dato">{{ getVarDate(friendRequest.bursdag) }} </td>
            <td><button class=" btn btn-info" id="knnap1" v-on:click="delFriend(friendRequest.id, index)">Fjern</button></td>
        </tr>
    </table>
</div>
</div>


@section Scripts
{
    <script src="https://unpkg.com/axios/dist/axios.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.min.js"></script>

    <script>
    
           $(document).ready(function() {
               Vue.config.productionTip = false;
           
            var app = new Vue({
                el: '#app',
               
                data: {
                    
                    x: [],
                       
                    message: "Venneliste",
                                                          
                    userpic: '',
                                                       
                    friendRequest: {
                        
                        firstName: '',
                        lastName: '',
                        bursdag: '',
                        Id: ""
                    }
          
                },
   
                created: function() {
                    var self = this;
                 
                    axios.get('/api/controller').then(function(response) {
                                
                        self.x = response.data;
                           
                    });
                },
                
                methods: {
                    addFriend: function() {
                        var self = this;

                        axios.post('/api/controller/', self.friendRequest).then(function(response) {
                            self.x.push(response.data);
                        });
                    },
                    delFriend: function(id, index) {
                        var self = this;

                        axios.delete('/api/controller/' + id)
                            .then(function(response) {
                                self.x.friendRequest.splice(index, 1);
                            });
                    },
                    visitFriend: function(id) {
                        window.location.href = '/Profile/Friend/' + id;
                    } , 
                    
                    getVarDate: function(birthDate){
                          
                        birthDate = new Date(birthDate);
                        hoursDiff = birthDate.getHours() - birthDate.getTimezoneOffset() / 60;
                        minutesDiff = (birthDate.getHours() - birthDate.getTimezoneOffset()) % 60;
                        birthDate.setHours(hoursDiff);
                        birthDate.setMinutes(minutesDiff);
                           
                        var date = new Date(birthDate).toJSON().slice(0,10).replace(/-/g,'/')
                        return date
                    } 
                                    
                }      
             
            });
        });

    </script>
}