
@{
    ViewData["Title"] = "Home Page";
}


@using Microsoft.AspNetCore.Identity
@using Microsoft.SqlServer.Server
@model IEnumerable<olist.Models.ApplicationUser>

@{
    ViewBag.Title = "Index";
}

<div class=«profiltabber»>
    <nav class="nav nav-tabs">
      
        <a asp-area="" asp-controller="Profile" asp-action="Index" class="nav-item nav-link">
            <i class="fa fa-user"></i> Hjem
        </a>
      
        <a asp-area="" asp-controller="Friendship" asp-action="Index" class="nav-item nav-link active">
            <i class="fa fa-users"></i> Venner
        </a>

        <a asp-area="" asp-controller="Notifikasjon" asp-action="Index" class="nav-item nav-link">
            <i class="fa fa-bell"></i> Varslinger
        </a>
      
        <a href="#" class="nav-item nav-link disabled" tabindex="-1">
            <i class="fas fa-shopping-basket"></i>Handlekurv[X]
        </a>
      
    </nav>
</div>

<div class = " jumbotron" id="jumboron1">
    
    
    <div id="app" v-cloak xmlns:v-on="http://www.w3.org/1999/xhtml" xmlns:v-bind="http://www.w3.org/1999/xhtml">
        
<h3 id="textCenter" xmlns:v-on="http://www.w3.org/1999/xhtml">Søk etter en venn</h3>
        <br/><br/>
<div style="text-align:center">
    <input id="input1" type="text"/>
    <button id="btn1" class="btn btn-info" onclick="foo()" type="submit" v-on:click="filteredFriends">Søk</button>
</div>
        <br/><br/>
        <br/><br/>
      
       
<h3 id="textCenter">{{ message }}</h3>
        <br/><br/>
        
        <table id="textCenter" class="table table-hover">
            <thead>
   

    
            <tr>
                <th></th>
                <th>Fornavn</th>
                <th>Etternavn</th>
                <th>Fødselsdato</th>
              
            </tr>
            
    
            <tr v-for="(søk, index) in søks" >
                <td class="FirstName"><img v-bind:src="søk.profilePicture" height="30" width="30"/> </td>
                <td class="FirstName">{{ søk.firstName }} </td>
                <td class="LastName">{{ søk.lastName }} </td>
                <td id="dateto" class="Birthday">{{ getVarDate(søk.birthDate) }}</td>
                <td><button  class="btn btn-info" v-on:click="addFriend(søk.id, index)">Send venneforespørsel</button></td>
            </tr>
    
        </table>
    </div>
</div>

@section Scripts
{
    <script src="https://unpkg.com/axios/dist/axios.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.min.js"></script>
    
    <script>
    
    var input1;
    var input3;
    
     function foo(){
                            
          input1 = document.getElementById("input1").value;
                              
            }
            
                
        $(document).ready(function() {
    
             
             $("#btn1").click(function(){
            
                     input1 = document.getElementById("input1").value;
                                       alert(input1);             
              });
            
           
            var app = new Vue({
                el: '#app',
               
                data: {
                    søks: [],
                    message: "Søkeresultater",
                                    
                    
                    søk: {
                        
                        profilePicture: '',
                        firstName: '',
                        lastName: '',
                        birthDate: '',
                        Id: ""
                        
                    }
             
                },
   
                created: function () {
                    var self = this;

                    axios.get('/api/search/?search='+'null').then(function(response) {
                        
                        self.søks = response.data;
                        
                  
                    });
                },
                                             
                methods: {
                    
                      filteredFriends: function(){                       
                          var self = this;
                                                   
                              axios.get('/api/search/?search=' + input1).then(function(response) {
                                 self.søks = response.data;
                                                           
                                      });
                                 },  
                                 
                   getVarDate: function(birthDate){
                          
                           birthDate = new Date(birthDate);
                            hoursDiff = birthDate.getHours() - birthDate.getTimezoneOffset() / 60;
                            minutesDiff = (birthDate.getHours() - birthDate.getTimezoneOffset()) % 60;
                           birthDate.setHours(hoursDiff);
                           birthDate.setMinutes(minutesDiff);
                           
                           var date = new Date(birthDate).toJSON().slice(0,10).replace(/-/g,'/')
                              return date
                                   } ,

                                                                                           
                    addFriend: function(id, index) {
                           var self = this;
                                                
                      axios.post('/api/search/' + id)
                          .then(function(response) {
                                 self.søks.splice(index, 1);
                               });
                              
                    }                                                                                          
                }
                    
            });
        });

    </script>
}

